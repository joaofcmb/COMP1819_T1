package parser;/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int LOWER = 10;
  /** RegularExpression Id. */
  int PLUS = 11;
  /** RegularExpression Id. */
  int MINUS = 12;
  /** RegularExpression Id. */
  int TIMES = 13;
  /** RegularExpression Id. */
  int DIVIDE = 14;
  /** RegularExpression Id. */
  int LENGTH = 15;
  /** RegularExpression Id. */
  int OPEN_PAREN = 16;
  /** RegularExpression Id. */
  int CLOSE_PAREN = 17;
  /** RegularExpression Id. */
  int COMMA = 18;
  /** RegularExpression Id. */
  int DOT = 19;
  /** RegularExpression Id. */
  int OPEN_BRACK = 20;
  /** RegularExpression Id. */
  int CLOSE_BRACK = 21;
  /** RegularExpression Id. */
  int VOID = 22;
  /** RegularExpression Id. */
  int INT = 23;
  /** RegularExpression Id. */
  int INTARRAY = 24;
  /** RegularExpression Id. */
  int STRINGARRAY = 25;
  /** RegularExpression Id. */
  int NOT = 26;
  /** RegularExpression Id. */
  int NEW = 27;
  /** RegularExpression Id. */
  int THIS = 28;
  /** RegularExpression Id. */
  int TRUE = 29;
  /** RegularExpression Id. */
  int FALSE = 30;
  /** RegularExpression Id. */
  int ASSIGN = 31;
  /** RegularExpression Id. */
  int BOOLEAN = 32;
  /** RegularExpression Id. */
  int SEMI_COLON = 33;
  /** RegularExpression Id. */
  int WHILE = 34;
  /** RegularExpression Id. */
  int IF = 35;
  /** RegularExpression Id. */
  int ELSE = 36;
  /** RegularExpression Id. */
  int OPEN_BRACES = 37;
  /** RegularExpression Id. */
  int CLOSE_BRACES = 38;
  /** RegularExpression Id. */
  int PUBLIC = 39;
  /** RegularExpression Id. */
  int STATIC = 40;
  /** RegularExpression Id. */
  int MAIN = 41;
  /** RegularExpression Id. */
  int RETURN = 42;
  /** RegularExpression Id. */
  int EXTENDS = 43;
  /** RegularExpression Id. */
  int CLASS = 44;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 45;
  /** RegularExpression Id. */
  int IDENTIFIER = 46;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"length\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
    "\"void\"",
    "\"int\"",
    "\"int[]\"",
    "\"String[]\"",
    "\"!\"",
    "\"new\"",
    "\"this\"",
    "\"true\"",
    "\"false\"",
    "\"=\"",
    "\"boolean\"",
    "\";\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"{\"",
    "\"}\"",
    "\"public\"",
    "\"static\"",
    "\"main\"",
    "\"return\"",
    "\"extends\"",
    "\"class\"",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
  };

}
