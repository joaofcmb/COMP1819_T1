/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. Parser.jj */
/*@egen*/options 
{
                             
    LOOKAHEAD = 1;
}

PARSER_BEGIN(Parser)
package parser;

public class Parser/*@bgen(jjtree)*/implements ParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected static JJTParserState jjtree = new JJTParserState();

/*@egen*/
    public static SimpleNode parse(String[] args) {
        //Parser initialization
        parser.Parser parser;

        if (args.length != 1){
            System.out.println ("Usage: java Parser <file_directory>");
            return null;
        }
        else {
            System.out.println("Parser: Reading file " + args[0] + " ..." );
            try {
                parser = new parser.Parser(new java.io.FileInputStream(args[0]));
            }
            catch(java.io.FileNotFoundException e) {
                System.out.println ("Parser: File " + args[0] + " not found.");
                return null;
            }
        }

        try {            
            SimpleNode root = parser.Program();
            System.out.println ("Parser: File parsed successfully.");

            return root;
        }
        catch(TokenMgrError e){
            System.out.println ("Parser: Token error.");
            System.out.println (e.getMessage());
        }  
        catch(ParseException e){
            System.out.println ("Parser: Parsing error.");            
            System.out.println (e.getMessage());
        }

        return null;
    }
}

PARSER_END(Parser)

// Symbols that should be ignored
SKIP: {
    " " | "\n" | "\t" | "\r"
}

// Must ignore single and multi line comments
SKIP: {
    < "//" (~["\r", "\n"])* >
    | "/*" : ML_COMMENT_STATE
}

<ML_COMMENT_STATE> SKIP :
{
    "*/" : DEFAULT
    | < ~[] >   
}

// Definition of terminal symbols
TOKEN:
{
    < AND: "&&" >
    | < LOWER : "<" >
    | < PLUS : "+" > 
    | < MINUS : "-" >
    | < TIMES : "*" >
    | < DIVIDE : "/" >
    | < LENGTH : "length" >
    | < OPEN_PAREN : "(" >
    | < CLOSE_PAREN : ")" >
    | < COMMA : "," >
    | < DOT : "." >
    | < OPEN_BRACK : "[" >
    | < CLOSE_BRACK : "]" >
    | < VOID : "void" >
    | < INT : "int" >
    | < INTARRAY : "int[]" >
    | < STRINGARRAY : "String[]" >
    | < NOT : "!" >
    | < NEW :  "new" >
    | < THIS : "this" >
    | < TRUE : "true" >
    | < FALSE : "false" >
    | < ASSIGN : "=" >
    | < BOOLEAN : "boolean" >
    | < SEMI_COLON : ";" >
    | < WHILE : "while" >
    | < IF : "if" >
    | < ELSE : "else" >
    | < OPEN_BRACES : "{" >
    | < CLOSE_BRACES : "}" >
    | < PUBLIC : "public" >
    | < STATIC : "static" >
    | < MAIN : "main" >
    | < RETURN : "return" >
    | < EXTENDS : "extends" >
    | < CLASS : "class" >
    | < INTEGER_LITERAL : (["0"-"9"])+ >
    | < IDENTIFIER : (["a"-"z","A"-"Z"]) (["a"-"z","A"-"Z","0"-"9","_"])* > 
    
}

// Definition of Terminal Leafs
void Id()    : {/*@bgen(jjtree) ID */
                SimpleNode jjtn000 = new SimpleNode(JJTID);
                boolean jjtc000 = true;
                jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) ID */
    try {
/*@egen*/
    t=<IDENTIFIER>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/ {jjtn000.value = t.image;}/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Integer()         : {/*@bgen(jjtree) INTEGER */
                          SimpleNode jjtn000 = new SimpleNode(JJTINTEGER);
                          boolean jjtc000 = true;
                          jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) INTEGER */
    try {
/*@egen*/
    t=<INTEGER_LITERAL>/*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn000, true);
                          jjtc000 = false;
                        }
/*@egen*/ {jjtn000.value = t.image;}/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Type(): {}
{
    TypeNoId() | TypeId()
}

void TypeNoId(): {}
{/*@bgen(jjtree) INTARRAY */
    {
      SimpleNode jjtn001 = new SimpleNode(JJTINTARRAY);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
    }
    try {
/*@egen*/
    <INTARRAY>/*@bgen(jjtree)*/
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001, true);
      }
    }
/*@egen*/          |/*@bgen(jjtree) INT */
                          {
                            SimpleNode jjtn002 = new SimpleNode(JJTINT);
                            boolean jjtc002 = true;
                            jjtree.openNodeScope(jjtn002);
                          }
                          try {
/*@egen*/ <INT>/*@bgen(jjtree)*/
                          } finally {
                            if (jjtc002) {
                              jjtree.closeNodeScope(jjtn002, true);
                            }
                          }
/*@egen*/     |/*@bgen(jjtree) BOOLEAN */
                                      {
                                        SimpleNode jjtn003 = new SimpleNode(JJTBOOLEAN);
                                        boolean jjtc003 = true;
                                        jjtree.openNodeScope(jjtn003);
                                      }
                                      try {
/*@egen*/ <BOOLEAN>/*@bgen(jjtree)*/
                                      } finally {
                                        if (jjtc003) {
                                          jjtree.closeNodeScope(jjtn003, true);
                                        }
                                      }
/*@egen*/        
}

void TypeId()    : {/*@bgen(jjtree) ID */
                    SimpleNode jjtn000 = new SimpleNode(JJTID);
                    boolean jjtc000 = true;
                    jjtree.openNodeScope(jjtn000);
/*@egen*/Token t;}
{/*@bgen(jjtree) ID */
    try {
/*@egen*/
    t=<IDENTIFIER>/*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn000, true);
                     jjtc000 = false;
                   }
/*@egen*/ {jjtn000.value = t.image;}/*@bgen(jjtree)*/
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

// Grammar Definition
SimpleNode Program()         : {/*@bgen(jjtree) PROGRAM */
  SimpleNode jjtn000 = new SimpleNode(JJTPROGRAM);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PROGRAM */
    try {
/*@egen*/
    ClassDeclaration() <EOF>/*@bgen(jjtree)*/
                             {
                               jjtree.closeNodeScope(jjtn000, true);
                               jjtc000 = false;
                             }
/*@egen*/ {return jjtn000;}/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void ClassDeclaration()       : {/*@bgen(jjtree) CLASS */
  SimpleNode jjtn000 = new SimpleNode(JJTCLASS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CLASS */
    try {
/*@egen*/
    <CLASS>
    Id()
    (<EXTENDS> Id())? 
    <OPEN_BRACES> (VarDeclaration())* (MethodDeclaration())* <CLOSE_BRACES>/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void VarDeclaration()     : {/*@bgen(jjtree) VAR */
  SimpleNode jjtn000 = new SimpleNode(JJTVAR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VAR */
    try {
/*@egen*/
    Type() Id() <SEMI_COLON>/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void MethodDeclaration(): {}
{
    <PUBLIC> (/*@bgen(jjtree) METHOD */
        {
          SimpleNode jjtn001 = new SimpleNode(JJTMETHOD);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
        }
        try {
/*@egen*/
        (Type() Id() <OPEN_PAREN> Params() <CLOSE_PAREN> <OPEN_BRACES> Body() <CLOSE_BRACES>)/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001, true);
          }
        }
/*@egen*/        
        |/*@bgen(jjtree) MAIN */
          {
            SimpleNode jjtn003 = new SimpleNode(JJTMAIN);
            boolean jjtc003 = true;
            jjtree.openNodeScope(jjtn003);
          }
          try {
/*@egen*/ (<STATIC> <VOID> <MAIN> <OPEN_PAREN> <STRINGARRAY> Id() <CLOSE_PAREN> <OPEN_BRACES>/*@bgen(jjtree) BODY */
                                                                                              {
                                                                                                SimpleNode jjtn002 = new SimpleNode(JJTBODY);
                                                                                                boolean jjtc002 = true;
                                                                                                jjtree.openNodeScope(jjtn002);
                                                                                              }
                                                                                              try {
/*@egen*/ [MethodBody()]/*@bgen(jjtree)*/
                                                                                              } catch (Throwable jjte002) {
                                                                                                if (jjtc002) {
                                                                                                  jjtree.clearNodeScope(jjtn002);
                                                                                                  jjtc002 = false;
                                                                                                } else {
                                                                                                  jjtree.popNode();
                                                                                                }
                                                                                                if (jjte002 instanceof RuntimeException) {
                                                                                                  throw (RuntimeException)jjte002;
                                                                                                }
                                                                                                if (jjte002 instanceof ParseException) {
                                                                                                  throw (ParseException)jjte002;
                                                                                                }
                                                                                                throw (Error)jjte002;
                                                                                              } finally {
                                                                                                if (jjtc002) {
                                                                                                  jjtree.closeNodeScope(jjtn002, true);
                                                                                                }
                                                                                              }
/*@egen*/       <CLOSE_BRACES>)/*@bgen(jjtree)*/
          } catch (Throwable jjte003) {
            if (jjtc003) {
              jjtree.clearNodeScope(jjtn003);
              jjtc003 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte003 instanceof RuntimeException) {
              throw (RuntimeException)jjte003;
            }
            if (jjte003 instanceof ParseException) {
              throw (ParseException)jjte003;
            }
            throw (Error)jjte003;
          } finally {
            if (jjtc003) {
              jjtree.closeNodeScope(jjtn003, true);
            }
          }
/*@egen*/      
    )
}

void Params()            : {/*@bgen(jjtree) PARAMETERS */
  SimpleNode jjtn000 = new SimpleNode(JJTPARAMETERS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PARAMETERS */
    try {
/*@egen*/
    (Type() Id() (<COMMA> Type() Id())*)?/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Body()      : {/*@bgen(jjtree) BODY */
  SimpleNode jjtn000 = new SimpleNode(JJTBODY);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) BODY */
    try {
/*@egen*/
    [MethodBody()] Return()/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Return()        : {/*@bgen(jjtree) RETURN */
  SimpleNode jjtn000 = new SimpleNode(JJTRETURN);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) RETURN */
    try {
/*@egen*/
    <RETURN> FullExpression() <SEMI_COLON>/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void MethodBody(): {} 
{   
    VarDeclarationNoId() [MethodBody()]
    | Id() (/*@bgen(jjtree) #VAR( 2) */
            {
              SimpleNode jjtn001 = new SimpleNode(JJTVAR);
              boolean jjtc001 = true;
              jjtree.openNodeScope(jjtn001);
            }
            try {
/*@egen*/Id()/*@bgen(jjtree)*/
            } catch (Throwable jjte001) {
              if (jjtc001) {
                jjtree.clearNodeScope(jjtn001);
                jjtc001 = false;
              } else {
                jjtree.popNode();
              }
              if (jjte001 instanceof RuntimeException) {
                throw (RuntimeException)jjte001;
              }
              if (jjte001 instanceof ParseException) {
                throw (ParseException)jjte001;
              }
              throw (Error)jjte001;
            } finally {
              if (jjtc001) {
                jjtree.closeNodeScope(jjtn001,  2);
              }
            }
/*@egen*/         <SEMI_COLON> [MethodBody()] | [IdStatement()] <SEMI_COLON> Statements())
    | NoIdStatement() Statements()
}

void VarDeclarationNoId()     : {/*@bgen(jjtree) VAR */
  SimpleNode jjtn000 = new SimpleNode(JJTVAR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VAR */
    try {
/*@egen*/
    TypeNoId() Id() <SEMI_COLON>/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

void Statements(): {}
{
    [Statement() Statements()]
}

void Statement(): {}
{
    NoIdStatement() | Id() [IdStatement()] <SEMI_COLON>
}

void IdStatement(): {} 
{   
    FullExpressionNoBrack()
    | <OPEN_BRACK>/*@bgen(jjtree) #INDEX( 2) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(JJTINDEX);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                   } catch (Throwable jjte001) {
                     if (jjtc001) {
                       jjtree.clearNodeScope(jjtn001);
                       jjtc001 = false;
                     } else {
                       jjtree.popNode();
                     }
                     if (jjte001 instanceof RuntimeException) {
                       throw (RuntimeException)jjte001;
                     }
                     if (jjte001 instanceof ParseException) {
                       throw (ParseException)jjte001;
                     }
                     throw (Error)jjte001;
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  2);
                     }
                   }
/*@egen*/           <CLOSE_BRACK> [(<ASSIGN>/*@bgen(jjtree) #ASSIGN( 2) */
                                                                       {
                                                                         SimpleNode jjtn002 = new SimpleNode(JJTASSIGN);
                                                                         boolean jjtc002 = true;
                                                                         jjtree.openNodeScope(jjtn002);
                                                                       }
                                                                       try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                                                                       } catch (Throwable jjte002) {
                                                                         if (jjtc002) {
                                                                           jjtree.clearNodeScope(jjtn002);
                                                                           jjtc002 = false;
                                                                         } else {
                                                                           jjtree.popNode();
                                                                         }
                                                                         if (jjte002 instanceof RuntimeException) {
                                                                           throw (RuntimeException)jjte002;
                                                                         }
                                                                         if (jjte002 instanceof ParseException) {
                                                                           throw (ParseException)jjte002;
                                                                         }
                                                                         throw (Error)jjte002;
                                                                       } finally {
                                                                         if (jjtc002) {
                                                                           jjtree.closeNodeScope(jjtn002,  2);
                                                                         }
                                                                       }
/*@egen*/            | FullExpressionNoFactor())]
    | <ASSIGN>/*@bgen(jjtree) #ASSIGN( 2) */
               {
                 SimpleNode jjtn003 = new SimpleNode(JJTASSIGN);
                 boolean jjtc003 = true;
                 jjtree.openNodeScope(jjtn003);
               }
               try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
               } catch (Throwable jjte003) {
                 if (jjtc003) {
                   jjtree.clearNodeScope(jjtn003);
                   jjtc003 = false;
                 } else {
                   jjtree.popNode();
                 }
                 if (jjte003 instanceof RuntimeException) {
                   throw (RuntimeException)jjte003;
                 }
                 if (jjte003 instanceof ParseException) {
                   throw (ParseException)jjte003;
                 }
                 throw (Error)jjte003;
               } finally {
                 if (jjtc003) {
                   jjtree.closeNodeScope(jjtn003,  2);
                 }
               }
/*@egen*/           
}

void NoIdStatement(): {boolean error = false;}
{   
    <OPEN_BRACES> Statements() <CLOSE_BRACES>
    |/*@bgen(jjtree) #IF( 3) */
      {
        SimpleNode jjtn004 = new SimpleNode(JJTIF);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
      }
      try {
/*@egen*/ (<IF> <OPEN_PAREN>/*@bgen(jjtree) COND */
                         {
                           SimpleNode jjtn001 = new SimpleNode(JJTCOND);
                           boolean jjtc001 = true;
                           jjtree.openNodeScope(jjtn001);
                         }
                         try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                         } catch (Throwable jjte001) {
                           if (jjtc001) {
                             jjtree.clearNodeScope(jjtn001);
                             jjtc001 = false;
                           } else {
                             jjtree.popNode();
                           }
                           if (jjte001 instanceof RuntimeException) {
                             throw (RuntimeException)jjte001;
                           }
                           if (jjte001 instanceof ParseException) {
                             throw (ParseException)jjte001;
                           }
                           throw (Error)jjte001;
                         } finally {
                           if (jjtc001) {
                             jjtree.closeNodeScope(jjtn001, true);
                           }
                         }
/*@egen*/       <CLOSE_PAREN>/*@bgen(jjtree) THEN */
                                                              {
                                                                SimpleNode jjtn002 = new SimpleNode(JJTTHEN);
                                                                boolean jjtc002 = true;
                                                                jjtree.openNodeScope(jjtn002);
                                                              }
                                                              try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                                              } catch (Throwable jjte002) {
                                                                if (jjtc002) {
                                                                  jjtree.clearNodeScope(jjtn002);
                                                                  jjtc002 = false;
                                                                } else {
                                                                  jjtree.popNode();
                                                                }
                                                                if (jjte002 instanceof RuntimeException) {
                                                                  throw (RuntimeException)jjte002;
                                                                }
                                                                if (jjte002 instanceof ParseException) {
                                                                  throw (ParseException)jjte002;
                                                                }
                                                                throw (Error)jjte002;
                                                              } finally {
                                                                if (jjtc002) {
                                                                  jjtree.closeNodeScope(jjtn002, true);
                                                                }
                                                              }
/*@egen*/       <ELSE>/*@bgen(jjtree) ELSE */
                                                                                       {
                                                                                         SimpleNode jjtn003 = new SimpleNode(JJTELSE);
                                                                                         boolean jjtc003 = true;
                                                                                         jjtree.openNodeScope(jjtn003);
                                                                                       }
                                                                                       try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                                                                       } catch (Throwable jjte003) {
                                                                                         if (jjtc003) {
                                                                                           jjtree.clearNodeScope(jjtn003);
                                                                                           jjtc003 = false;
                                                                                         } else {
                                                                                           jjtree.popNode();
                                                                                         }
                                                                                         if (jjte003 instanceof RuntimeException) {
                                                                                           throw (RuntimeException)jjte003;
                                                                                         }
                                                                                         if (jjte003 instanceof ParseException) {
                                                                                           throw (ParseException)jjte003;
                                                                                         }
                                                                                         throw (Error)jjte003;
                                                                                       } finally {
                                                                                         if (jjtc003) {
                                                                                           jjtree.closeNodeScope(jjtn003, true);
                                                                                         }
                                                                                       }
/*@egen*/      )/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004,  3);
        }
      }
/*@egen*/       
    |/*@bgen(jjtree) #WHILE( error ? 1 : 2) */
      {
        SimpleNode jjtn007 = new SimpleNode(JJTWHILE);
        boolean jjtc007 = true;
        jjtree.openNodeScope(jjtn007);
      }
      try {
/*@egen*/ (
        <WHILE> 
        try {            
            <OPEN_PAREN>/*@bgen(jjtree) COND */
                         {
                           SimpleNode jjtn005 = new SimpleNode(JJTCOND);
                           boolean jjtc005 = true;
                           jjtree.openNodeScope(jjtn005);
                         }
                         try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                         } catch (Throwable jjte005) {
                           if (jjtc005) {
                             jjtree.clearNodeScope(jjtn005);
                             jjtc005 = false;
                           } else {
                             jjtree.popNode();
                           }
                           if (jjte005 instanceof RuntimeException) {
                             throw (RuntimeException)jjte005;
                           }
                           if (jjte005 instanceof ParseException) {
                             throw (ParseException)jjte005;
                           }
                           throw (Error)jjte005;
                         } finally {
                           if (jjtc005) {
                             jjtree.closeNodeScope(jjtn005, true);
                           }
                         }
/*@egen*/       <CLOSE_PAREN>
        }
        catch (ParseException e) {
            error = true;
            System.out.println ("Parser: Parsing error.");
            System.out.println(e.toString());  // Print the error message         
            error_skip();        
        }
        catch (TokenMgrError e) {
            error = true;
            System.out.println ("Parser: Token error.");
            System.out.println(e.toString());  // Print the error message
            error_skip();        
        }/*@bgen(jjtree) DO */
        {
          SimpleNode jjtn006 = new SimpleNode(JJTDO);
          boolean jjtc006 = true;
          jjtree.openNodeScope(jjtn006);
        }
        try {
/*@egen*/
        Statement()/*@bgen(jjtree)*/
        } catch (Throwable jjte006) {
          if (jjtc006) {
            jjtree.clearNodeScope(jjtn006);
            jjtc006 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte006 instanceof RuntimeException) {
            throw (RuntimeException)jjte006;
          }
          if (jjte006 instanceof ParseException) {
            throw (ParseException)jjte006;
          }
          throw (Error)jjte006;
        } finally {
          if (jjtc006) {
            jjtree.closeNodeScope(jjtn006, true);
          }
        }
/*@egen*/    
    )/*@bgen(jjtree)*/
      } catch (Throwable jjte007) {
        if (jjtc007) {
          jjtree.clearNodeScope(jjtn007);
          jjtc007 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte007 instanceof RuntimeException) {
          throw (RuntimeException)jjte007;
        }
        if (jjte007 instanceof ParseException) {
          throw (ParseException)jjte007;
        }
        throw (Error)jjte007;
      } finally {
        if (jjtc007) {
          jjtree.closeNodeScope(jjtn007,  error ? 1 : 2);
        }
      }
/*@egen*/                      
    | FullExpressionNoId() <SEMI_COLON>
}

void FullExpression(): {}           { CompExpression() (<AND>/*@bgen(jjtree) #AND( 2) */
                                                              {
                                                                SimpleNode jjtn001 = new SimpleNode(JJTAND);
                                                                boolean jjtc001 = true;
                                                                jjtree.openNodeScope(jjtn001);
                                                              }
                                                              try {
/*@egen*/ CompExpression()/*@bgen(jjtree)*/
                                                              } catch (Throwable jjte001) {
                                                                if (jjtc001) {
                                                                  jjtree.clearNodeScope(jjtn001);
                                                                  jjtc001 = false;
                                                                } else {
                                                                  jjtree.popNode();
                                                                }
                                                                if (jjte001 instanceof RuntimeException) {
                                                                  throw (RuntimeException)jjte001;
                                                                }
                                                                if (jjte001 instanceof ParseException) {
                                                                  throw (ParseException)jjte001;
                                                                }
                                                                throw (Error)jjte001;
                                                              } finally {
                                                                if (jjtc001) {
                                                                  jjtree.closeNodeScope(jjtn001,  2);
                                                                }
                                                              }
/*@egen*/        )* }
void FullExpressionNoId(): {}       { CompExpressionNoId() (<AND>/*@bgen(jjtree) #AND( 2) */
                                                                  {
                                                                    SimpleNode jjtn001 = new SimpleNode(JJTAND);
                                                                    boolean jjtc001 = true;
                                                                    jjtree.openNodeScope(jjtn001);
                                                                  }
                                                                  try {
/*@egen*/ CompExpression()/*@bgen(jjtree)*/
                                                                  } catch (Throwable jjte001) {
                                                                    if (jjtc001) {
                                                                      jjtree.clearNodeScope(jjtn001);
                                                                      jjtc001 = false;
                                                                    } else {
                                                                      jjtree.popNode();
                                                                    }
                                                                    if (jjte001 instanceof RuntimeException) {
                                                                      throw (RuntimeException)jjte001;
                                                                    }
                                                                    if (jjte001 instanceof ParseException) {
                                                                      throw (ParseException)jjte001;
                                                                    }
                                                                    throw (Error)jjte001;
                                                                  } finally {
                                                                    if (jjtc001) {
                                                                      jjtree.closeNodeScope(jjtn001,  2);
                                                                    }
                                                                  }
/*@egen*/        )* }
void FullExpressionNoBrack(): {}    { (<AND>/*@bgen(jjtree) #AND( 2) */
                                             {
                                               SimpleNode jjtn001 = new SimpleNode(JJTAND);
                                               boolean jjtc001 = true;
                                               jjtree.openNodeScope(jjtn001);
                                             }
                                             try {
/*@egen*/ CompExpression()/*@bgen(jjtree)*/
                                             } catch (Throwable jjte001) {
                                               if (jjtc001) {
                                                 jjtree.clearNodeScope(jjtn001);
                                                 jjtc001 = false;
                                               } else {
                                                 jjtree.popNode();
                                               }
                                               if (jjte001 instanceof RuntimeException) {
                                                 throw (RuntimeException)jjte001;
                                               }
                                               if (jjte001 instanceof ParseException) {
                                                 throw (ParseException)jjte001;
                                               }
                                               throw (Error)jjte001;
                                             } finally {
                                               if (jjtc001) {
                                                 jjtree.closeNodeScope(jjtn001,  2);
                                               }
                                             }
/*@egen*/         | CompExpressionNoBrack()) (<AND>/*@bgen(jjtree) #AND( 2) */
                                                                                                        {
                                                                                                          SimpleNode jjtn002 = new SimpleNode(JJTAND);
                                                                                                          boolean jjtc002 = true;
                                                                                                          jjtree.openNodeScope(jjtn002);
                                                                                                        }
                                                                                                        try {
/*@egen*/ CompExpression()/*@bgen(jjtree)*/
                                                                                                        } catch (Throwable jjte002) {
                                                                                                          if (jjtc002) {
                                                                                                            jjtree.clearNodeScope(jjtn002);
                                                                                                            jjtc002 = false;
                                                                                                          } else {
                                                                                                            jjtree.popNode();
                                                                                                          }
                                                                                                          if (jjte002 instanceof RuntimeException) {
                                                                                                            throw (RuntimeException)jjte002;
                                                                                                          }
                                                                                                          if (jjte002 instanceof ParseException) {
                                                                                                            throw (ParseException)jjte002;
                                                                                                          }
                                                                                                          throw (Error)jjte002;
                                                                                                        } finally {
                                                                                                          if (jjtc002) {
                                                                                                            jjtree.closeNodeScope(jjtn002,  2);
                                                                                                          }
                                                                                                        }
/*@egen*/        )* }
void FullExpressionNoFactor(): {}   { CompExpressionNoFactor() (<AND>/*@bgen(jjtree) #AND( 2) */
                                                                      {
                                                                        SimpleNode jjtn001 = new SimpleNode(JJTAND);
                                                                        boolean jjtc001 = true;
                                                                        jjtree.openNodeScope(jjtn001);
                                                                      }
                                                                      try {
/*@egen*/ CompExpression()/*@bgen(jjtree)*/
                                                                      } catch (Throwable jjte001) {
                                                                        if (jjtc001) {
                                                                          jjtree.clearNodeScope(jjtn001);
                                                                          jjtc001 = false;
                                                                        } else {
                                                                          jjtree.popNode();
                                                                        }
                                                                        if (jjte001 instanceof RuntimeException) {
                                                                          throw (RuntimeException)jjte001;
                                                                        }
                                                                        if (jjte001 instanceof ParseException) {
                                                                          throw (ParseException)jjte001;
                                                                        }
                                                                        throw (Error)jjte001;
                                                                      } finally {
                                                                        if (jjtc001) {
                                                                          jjtree.closeNodeScope(jjtn001,  2);
                                                                        }
                                                                      }
/*@egen*/        )* }

void CompExpression(): {}           { Expression() (<LOWER>/*@bgen(jjtree) #LOWER( 2) */
                                                            {
                                                              SimpleNode jjtn001 = new SimpleNode(JJTLOWER);
                                                              boolean jjtc001 = true;
                                                              jjtree.openNodeScope(jjtn001);
                                                            }
                                                            try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                            } catch (Throwable jjte001) {
                                                              if (jjtc001) {
                                                                jjtree.clearNodeScope(jjtn001);
                                                                jjtc001 = false;
                                                              } else {
                                                                jjtree.popNode();
                                                              }
                                                              if (jjte001 instanceof RuntimeException) {
                                                                throw (RuntimeException)jjte001;
                                                              }
                                                              if (jjte001 instanceof ParseException) {
                                                                throw (ParseException)jjte001;
                                                              }
                                                              throw (Error)jjte001;
                                                            } finally {
                                                              if (jjtc001) {
                                                                jjtree.closeNodeScope(jjtn001,  2);
                                                              }
                                                            }
/*@egen*/          )* }
void CompExpressionNoId(): {}       { ExpressionNoId() (<LOWER>/*@bgen(jjtree) #LOWER( 2) */
                                                                {
                                                                  SimpleNode jjtn001 = new SimpleNode(JJTLOWER);
                                                                  boolean jjtc001 = true;
                                                                  jjtree.openNodeScope(jjtn001);
                                                                }
                                                                try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                } catch (Throwable jjte001) {
                                                                  if (jjtc001) {
                                                                    jjtree.clearNodeScope(jjtn001);
                                                                    jjtc001 = false;
                                                                  } else {
                                                                    jjtree.popNode();
                                                                  }
                                                                  if (jjte001 instanceof RuntimeException) {
                                                                    throw (RuntimeException)jjte001;
                                                                  }
                                                                  if (jjte001 instanceof ParseException) {
                                                                    throw (ParseException)jjte001;
                                                                  }
                                                                  throw (Error)jjte001;
                                                                } finally {
                                                                  if (jjtc001) {
                                                                    jjtree.closeNodeScope(jjtn001,  2);
                                                                  }
                                                                }
/*@egen*/          )* }
void CompExpressionNoBrack(): {}    { (<LOWER>/*@bgen(jjtree) #LOWER( 2) */
                                               {
                                                 SimpleNode jjtn001 = new SimpleNode(JJTLOWER);
                                                 boolean jjtc001 = true;
                                                 jjtree.openNodeScope(jjtn001);
                                               }
                                               try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                               } catch (Throwable jjte001) {
                                                 if (jjtc001) {
                                                   jjtree.clearNodeScope(jjtn001);
                                                   jjtc001 = false;
                                                 } else {
                                                   jjtree.popNode();
                                                 }
                                                 if (jjte001 instanceof RuntimeException) {
                                                   throw (RuntimeException)jjte001;
                                                 }
                                                 if (jjte001 instanceof ParseException) {
                                                   throw (ParseException)jjte001;
                                                 }
                                                 throw (Error)jjte001;
                                               } finally {
                                                 if (jjtc001) {
                                                   jjtree.closeNodeScope(jjtn001,  2);
                                                 }
                                               }
/*@egen*/           | ExpressionNoBrack()) (<LOWER>/*@bgen(jjtree) #LOWER( 2) */
                                                                                                      {
                                                                                                        SimpleNode jjtn002 = new SimpleNode(JJTLOWER);
                                                                                                        boolean jjtc002 = true;
                                                                                                        jjtree.openNodeScope(jjtn002);
                                                                                                      }
                                                                                                      try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                                                      } catch (Throwable jjte002) {
                                                                                                        if (jjtc002) {
                                                                                                          jjtree.clearNodeScope(jjtn002);
                                                                                                          jjtc002 = false;
                                                                                                        } else {
                                                                                                          jjtree.popNode();
                                                                                                        }
                                                                                                        if (jjte002 instanceof RuntimeException) {
                                                                                                          throw (RuntimeException)jjte002;
                                                                                                        }
                                                                                                        if (jjte002 instanceof ParseException) {
                                                                                                          throw (ParseException)jjte002;
                                                                                                        }
                                                                                                        throw (Error)jjte002;
                                                                                                      } finally {
                                                                                                        if (jjtc002) {
                                                                                                          jjtree.closeNodeScope(jjtn002,  2);
                                                                                                        }
                                                                                                      }
/*@egen*/          )* }
void CompExpressionNoFactor(): {}   { ExpressionNoFactor() (<LOWER>/*@bgen(jjtree) #LOWER( 2) */
                                                                    {
                                                                      SimpleNode jjtn001 = new SimpleNode(JJTLOWER);
                                                                      boolean jjtc001 = true;
                                                                      jjtree.openNodeScope(jjtn001);
                                                                    }
                                                                    try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                                                    } catch (Throwable jjte001) {
                                                                      if (jjtc001) {
                                                                        jjtree.clearNodeScope(jjtn001);
                                                                        jjtc001 = false;
                                                                      } else {
                                                                        jjtree.popNode();
                                                                      }
                                                                      if (jjte001 instanceof RuntimeException) {
                                                                        throw (RuntimeException)jjte001;
                                                                      }
                                                                      if (jjte001 instanceof ParseException) {
                                                                        throw (ParseException)jjte001;
                                                                      }
                                                                      throw (Error)jjte001;
                                                                    } finally {
                                                                      if (jjtc001) {
                                                                        jjtree.closeNodeScope(jjtn001,  2);
                                                                      }
                                                                    }
/*@egen*/          )* }

void Expression(): {}               { Term() (<PLUS>/*@bgen(jjtree) #PLUS( 2) */
                                                     {
                                                       SimpleNode jjtn001 = new SimpleNode(JJTPLUS);
                                                       boolean jjtc001 = true;
                                                       jjtree.openNodeScope(jjtn001);
                                                     }
                                                     try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                     } catch (Throwable jjte001) {
                                                       if (jjtc001) {
                                                         jjtree.clearNodeScope(jjtn001);
                                                         jjtc001 = false;
                                                       } else {
                                                         jjtree.popNode();
                                                       }
                                                       if (jjte001 instanceof RuntimeException) {
                                                         throw (RuntimeException)jjte001;
                                                       }
                                                       if (jjte001 instanceof ParseException) {
                                                         throw (ParseException)jjte001;
                                                       }
                                                       throw (Error)jjte001;
                                                     } finally {
                                                       if (jjtc001) {
                                                         jjtree.closeNodeScope(jjtn001,  2);
                                                       }
                                                     }
/*@egen*/          | <MINUS>/*@bgen(jjtree) #MINUS( 2) */
                                                                               {
                                                                                 SimpleNode jjtn002 = new SimpleNode(JJTMINUS);
                                                                                 boolean jjtc002 = true;
                                                                                 jjtree.openNodeScope(jjtn002);
                                                                               }
                                                                               try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                                               } catch (Throwable jjte002) {
                                                                                 if (jjtc002) {
                                                                                   jjtree.clearNodeScope(jjtn002);
                                                                                   jjtc002 = false;
                                                                                 } else {
                                                                                   jjtree.popNode();
                                                                                 }
                                                                                 if (jjte002 instanceof RuntimeException) {
                                                                                   throw (RuntimeException)jjte002;
                                                                                 }
                                                                                 if (jjte002 instanceof ParseException) {
                                                                                   throw (ParseException)jjte002;
                                                                                 }
                                                                                 throw (Error)jjte002;
                                                                               } finally {
                                                                                 if (jjtc002) {
                                                                                   jjtree.closeNodeScope(jjtn002,  2);
                                                                                 }
                                                                               }
/*@egen*/          )* }
void ExpressionNoId(): {}           { TermNoId() (<PLUS>/*@bgen(jjtree) #PLUS( 2) */
                                                         {
                                                           SimpleNode jjtn001 = new SimpleNode(JJTPLUS);
                                                           boolean jjtc001 = true;
                                                           jjtree.openNodeScope(jjtn001);
                                                         }
                                                         try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                         } catch (Throwable jjte001) {
                                                           if (jjtc001) {
                                                             jjtree.clearNodeScope(jjtn001);
                                                             jjtc001 = false;
                                                           } else {
                                                             jjtree.popNode();
                                                           }
                                                           if (jjte001 instanceof RuntimeException) {
                                                             throw (RuntimeException)jjte001;
                                                           }
                                                           if (jjte001 instanceof ParseException) {
                                                             throw (ParseException)jjte001;
                                                           }
                                                           throw (Error)jjte001;
                                                         } finally {
                                                           if (jjtc001) {
                                                             jjtree.closeNodeScope(jjtn001,  2);
                                                           }
                                                         }
/*@egen*/          | <MINUS>/*@bgen(jjtree) #MINUS( 2) */
                                                                                   {
                                                                                     SimpleNode jjtn002 = new SimpleNode(JJTMINUS);
                                                                                     boolean jjtc002 = true;
                                                                                     jjtree.openNodeScope(jjtn002);
                                                                                   }
                                                                                   try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                                                   } catch (Throwable jjte002) {
                                                                                     if (jjtc002) {
                                                                                       jjtree.clearNodeScope(jjtn002);
                                                                                       jjtc002 = false;
                                                                                     } else {
                                                                                       jjtree.popNode();
                                                                                     }
                                                                                     if (jjte002 instanceof RuntimeException) {
                                                                                       throw (RuntimeException)jjte002;
                                                                                     }
                                                                                     if (jjte002 instanceof ParseException) {
                                                                                       throw (ParseException)jjte002;
                                                                                     }
                                                                                     throw (Error)jjte002;
                                                                                   } finally {
                                                                                     if (jjtc002) {
                                                                                       jjtree.closeNodeScope(jjtn002,  2);
                                                                                     }
                                                                                   }
/*@egen*/          )* }
void ExpressionNoBrack(): {}        { ((<PLUS>/*@bgen(jjtree) #PLUS( 2) */
                                               {
                                                 SimpleNode jjtn001 = new SimpleNode(JJTPLUS);
                                                 boolean jjtc001 = true;
                                                 jjtree.openNodeScope(jjtn001);
                                               }
                                               try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                               } catch (Throwable jjte001) {
                                                 if (jjtc001) {
                                                   jjtree.clearNodeScope(jjtn001);
                                                   jjtc001 = false;
                                                 } else {
                                                   jjtree.popNode();
                                                 }
                                                 if (jjte001 instanceof RuntimeException) {
                                                   throw (RuntimeException)jjte001;
                                                 }
                                                 if (jjte001 instanceof ParseException) {
                                                   throw (ParseException)jjte001;
                                                 }
                                                 throw (Error)jjte001;
                                               } finally {
                                                 if (jjtc001) {
                                                   jjtree.closeNodeScope(jjtn001,  2);
                                                 }
                                               }
/*@egen*/          | <MINUS>/*@bgen(jjtree) #MINUS( 2) */
                                                                         {
                                                                           SimpleNode jjtn002 = new SimpleNode(JJTMINUS);
                                                                           boolean jjtc002 = true;
                                                                           jjtree.openNodeScope(jjtn002);
                                                                         }
                                                                         try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                                         } catch (Throwable jjte002) {
                                                                           if (jjtc002) {
                                                                             jjtree.clearNodeScope(jjtn002);
                                                                             jjtc002 = false;
                                                                           } else {
                                                                             jjtree.popNode();
                                                                           }
                                                                           if (jjte002 instanceof RuntimeException) {
                                                                             throw (RuntimeException)jjte002;
                                                                           }
                                                                           if (jjte002 instanceof ParseException) {
                                                                             throw (ParseException)jjte002;
                                                                           }
                                                                           throw (Error)jjte002;
                                                                         } finally {
                                                                           if (jjtc002) {
                                                                             jjtree.closeNodeScope(jjtn002,  2);
                                                                           }
                                                                         }
/*@egen*/          ) | TermNoBrack()) 
                                      (<PLUS>/*@bgen(jjtree) #PLUS( 2) */
                                              {
                                                SimpleNode jjtn003 = new SimpleNode(JJTPLUS);
                                                boolean jjtc003 = true;
                                                jjtree.openNodeScope(jjtn003);
                                              }
                                              try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                              } catch (Throwable jjte003) {
                                                if (jjtc003) {
                                                  jjtree.clearNodeScope(jjtn003);
                                                  jjtc003 = false;
                                                } else {
                                                  jjtree.popNode();
                                                }
                                                if (jjte003 instanceof RuntimeException) {
                                                  throw (RuntimeException)jjte003;
                                                }
                                                if (jjte003 instanceof ParseException) {
                                                  throw (ParseException)jjte003;
                                                }
                                                throw (Error)jjte003;
                                              } finally {
                                                if (jjtc003) {
                                                  jjtree.closeNodeScope(jjtn003,  2);
                                                }
                                              }
/*@egen*/          | <MINUS>/*@bgen(jjtree) #MINUS( 2) */
                                                                        {
                                                                          SimpleNode jjtn004 = new SimpleNode(JJTMINUS);
                                                                          boolean jjtc004 = true;
                                                                          jjtree.openNodeScope(jjtn004);
                                                                        }
                                                                        try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                                        } catch (Throwable jjte004) {
                                                                          if (jjtc004) {
                                                                            jjtree.clearNodeScope(jjtn004);
                                                                            jjtc004 = false;
                                                                          } else {
                                                                            jjtree.popNode();
                                                                          }
                                                                          if (jjte004 instanceof RuntimeException) {
                                                                            throw (RuntimeException)jjte004;
                                                                          }
                                                                          if (jjte004 instanceof ParseException) {
                                                                            throw (ParseException)jjte004;
                                                                          }
                                                                          throw (Error)jjte004;
                                                                        } finally {
                                                                          if (jjtc004) {
                                                                            jjtree.closeNodeScope(jjtn004,  2);
                                                                          }
                                                                        }
/*@egen*/          )* }
void ExpressionNoFactor(): {}       { TermNoFactor() (<PLUS>/*@bgen(jjtree) #PLUS( 2) */
                                                             {
                                                               SimpleNode jjtn001 = new SimpleNode(JJTPLUS);
                                                               boolean jjtc001 = true;
                                                               jjtree.openNodeScope(jjtn001);
                                                             }
                                                             try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                             } catch (Throwable jjte001) {
                                                               if (jjtc001) {
                                                                 jjtree.clearNodeScope(jjtn001);
                                                                 jjtc001 = false;
                                                               } else {
                                                                 jjtree.popNode();
                                                               }
                                                               if (jjte001 instanceof RuntimeException) {
                                                                 throw (RuntimeException)jjte001;
                                                               }
                                                               if (jjte001 instanceof ParseException) {
                                                                 throw (ParseException)jjte001;
                                                               }
                                                               throw (Error)jjte001;
                                                             } finally {
                                                               if (jjtc001) {
                                                                 jjtree.closeNodeScope(jjtn001,  2);
                                                               }
                                                             }
/*@egen*/          | <MINUS>/*@bgen(jjtree) #MINUS( 2) */
                                                                                       {
                                                                                         SimpleNode jjtn002 = new SimpleNode(JJTMINUS);
                                                                                         boolean jjtc002 = true;
                                                                                         jjtree.openNodeScope(jjtn002);
                                                                                       }
                                                                                       try {
/*@egen*/ Term()/*@bgen(jjtree)*/
                                                                                       } catch (Throwable jjte002) {
                                                                                         if (jjtc002) {
                                                                                           jjtree.clearNodeScope(jjtn002);
                                                                                           jjtc002 = false;
                                                                                         } else {
                                                                                           jjtree.popNode();
                                                                                         }
                                                                                         if (jjte002 instanceof RuntimeException) {
                                                                                           throw (RuntimeException)jjte002;
                                                                                         }
                                                                                         if (jjte002 instanceof ParseException) {
                                                                                           throw (ParseException)jjte002;
                                                                                         }
                                                                                         throw (Error)jjte002;
                                                                                       } finally {
                                                                                         if (jjtc002) {
                                                                                           jjtree.closeNodeScope(jjtn002,  2);
                                                                                         }
                                                                                       }
/*@egen*/          )* }

void Term(): {}                 { Factor() (<TIMES>/*@bgen(jjtree) #TIMES( 2) */
                                                    {
                                                      SimpleNode jjtn001 = new SimpleNode(JJTTIMES);
                                                      boolean jjtc001 = true;
                                                      jjtree.openNodeScope(jjtn001);
                                                    }
                                                    try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                    } catch (Throwable jjte001) {
                                                      if (jjtc001) {
                                                        jjtree.clearNodeScope(jjtn001);
                                                        jjtc001 = false;
                                                      } else {
                                                        jjtree.popNode();
                                                      }
                                                      if (jjte001 instanceof RuntimeException) {
                                                        throw (RuntimeException)jjte001;
                                                      }
                                                      if (jjte001 instanceof ParseException) {
                                                        throw (ParseException)jjte001;
                                                      }
                                                      throw (Error)jjte001;
                                                    } finally {
                                                      if (jjtc001) {
                                                        jjtree.closeNodeScope(jjtn001,  2);
                                                      }
                                                    }
/*@egen*/           | <DIVIDE>/*@bgen(jjtree) #DIVIDE( 2) */
                                                                                  {
                                                                                    SimpleNode jjtn002 = new SimpleNode(JJTDIVIDE);
                                                                                    boolean jjtc002 = true;
                                                                                    jjtree.openNodeScope(jjtn002);
                                                                                  }
                                                                                  try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                                                  } catch (Throwable jjte002) {
                                                                                    if (jjtc002) {
                                                                                      jjtree.clearNodeScope(jjtn002);
                                                                                      jjtc002 = false;
                                                                                    } else {
                                                                                      jjtree.popNode();
                                                                                    }
                                                                                    if (jjte002 instanceof RuntimeException) {
                                                                                      throw (RuntimeException)jjte002;
                                                                                    }
                                                                                    if (jjte002 instanceof ParseException) {
                                                                                      throw (ParseException)jjte002;
                                                                                    }
                                                                                    throw (Error)jjte002;
                                                                                  } finally {
                                                                                    if (jjtc002) {
                                                                                      jjtree.closeNodeScope(jjtn002,  2);
                                                                                    }
                                                                                  }
/*@egen*/           )* }
void TermNoId(): {}             { FactorNoId() (<TIMES>/*@bgen(jjtree) #TIMES( 2) */
                                                        {
                                                          SimpleNode jjtn001 = new SimpleNode(JJTTIMES);
                                                          boolean jjtc001 = true;
                                                          jjtree.openNodeScope(jjtn001);
                                                        }
                                                        try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                        } catch (Throwable jjte001) {
                                                          if (jjtc001) {
                                                            jjtree.clearNodeScope(jjtn001);
                                                            jjtc001 = false;
                                                          } else {
                                                            jjtree.popNode();
                                                          }
                                                          if (jjte001 instanceof RuntimeException) {
                                                            throw (RuntimeException)jjte001;
                                                          }
                                                          if (jjte001 instanceof ParseException) {
                                                            throw (ParseException)jjte001;
                                                          }
                                                          throw (Error)jjte001;
                                                        } finally {
                                                          if (jjtc001) {
                                                            jjtree.closeNodeScope(jjtn001,  2);
                                                          }
                                                        }
/*@egen*/           | <DIVIDE>/*@bgen(jjtree) #DIVIDE( 2) */
                                                                                      {
                                                                                        SimpleNode jjtn002 = new SimpleNode(JJTDIVIDE);
                                                                                        boolean jjtc002 = true;
                                                                                        jjtree.openNodeScope(jjtn002);
                                                                                      }
                                                                                      try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                                                      } catch (Throwable jjte002) {
                                                                                        if (jjtc002) {
                                                                                          jjtree.clearNodeScope(jjtn002);
                                                                                          jjtc002 = false;
                                                                                        } else {
                                                                                          jjtree.popNode();
                                                                                        }
                                                                                        if (jjte002 instanceof RuntimeException) {
                                                                                          throw (RuntimeException)jjte002;
                                                                                        }
                                                                                        if (jjte002 instanceof ParseException) {
                                                                                          throw (ParseException)jjte002;
                                                                                        }
                                                                                        throw (Error)jjte002;
                                                                                      } finally {
                                                                                        if (jjtc002) {
                                                                                          jjtree.closeNodeScope(jjtn002,  2);
                                                                                        }
                                                                                      }
/*@egen*/           )* }
void TermNoBrack(): {}          { NoBrackNextFactor() (TermNoFactor() | (<TIMES>/*@bgen(jjtree) #TIMES( 2) */
                                                                                 {
                                                                                   SimpleNode jjtn001 = new SimpleNode(JJTTIMES);
                                                                                   boolean jjtc001 = true;
                                                                                   jjtree.openNodeScope(jjtn001);
                                                                                 }
                                                                                 try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                                                 } catch (Throwable jjte001) {
                                                                                   if (jjtc001) {
                                                                                     jjtree.clearNodeScope(jjtn001);
                                                                                     jjtc001 = false;
                                                                                   } else {
                                                                                     jjtree.popNode();
                                                                                   }
                                                                                   if (jjte001 instanceof RuntimeException) {
                                                                                     throw (RuntimeException)jjte001;
                                                                                   }
                                                                                   if (jjte001 instanceof ParseException) {
                                                                                     throw (ParseException)jjte001;
                                                                                   }
                                                                                   throw (Error)jjte001;
                                                                                 } finally {
                                                                                   if (jjtc001) {
                                                                                     jjtree.closeNodeScope(jjtn001,  2);
                                                                                   }
                                                                                 }
/*@egen*/           | <DIVIDE>/*@bgen(jjtree) #DIVIDE( 2) */
                                                                                                               {
                                                                                                                 SimpleNode jjtn002 = new SimpleNode(JJTDIVIDE);
                                                                                                                 boolean jjtc002 = true;
                                                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                                               }
                                                                                                               try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                                                                               } catch (Throwable jjte002) {
                                                                                                                 if (jjtc002) {
                                                                                                                   jjtree.clearNodeScope(jjtn002);
                                                                                                                   jjtc002 = false;
                                                                                                                 } else {
                                                                                                                   jjtree.popNode();
                                                                                                                 }
                                                                                                                 if (jjte002 instanceof RuntimeException) {
                                                                                                                   throw (RuntimeException)jjte002;
                                                                                                                 }
                                                                                                                 if (jjte002 instanceof ParseException) {
                                                                                                                   throw (ParseException)jjte002;
                                                                                                                 }
                                                                                                                 throw (Error)jjte002;
                                                                                                               } finally {
                                                                                                                 if (jjtc002) {
                                                                                                                   jjtree.closeNodeScope(jjtn002,  2);
                                                                                                                 }
                                                                                                               }
/*@egen*/           )*) }
void TermNoFactor(): {}         { (NextFactor())+ (<TIMES>/*@bgen(jjtree) #TIMES( 2) */
                                                           {
                                                             SimpleNode jjtn001 = new SimpleNode(JJTTIMES);
                                                             boolean jjtc001 = true;
                                                             jjtree.openNodeScope(jjtn001);
                                                           }
                                                           try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                           } catch (Throwable jjte001) {
                                                             if (jjtc001) {
                                                               jjtree.clearNodeScope(jjtn001);
                                                               jjtc001 = false;
                                                             } else {
                                                               jjtree.popNode();
                                                             }
                                                             if (jjte001 instanceof RuntimeException) {
                                                               throw (RuntimeException)jjte001;
                                                             }
                                                             if (jjte001 instanceof ParseException) {
                                                               throw (ParseException)jjte001;
                                                             }
                                                             throw (Error)jjte001;
                                                           } finally {
                                                             if (jjtc001) {
                                                               jjtree.closeNodeScope(jjtn001,  2);
                                                             }
                                                           }
/*@egen*/           | <DIVIDE>/*@bgen(jjtree) #DIVIDE( 2) */
                                                                                         {
                                                                                           SimpleNode jjtn002 = new SimpleNode(JJTDIVIDE);
                                                                                           boolean jjtc002 = true;
                                                                                           jjtree.openNodeScope(jjtn002);
                                                                                         }
                                                                                         try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
                                                                                         } catch (Throwable jjte002) {
                                                                                           if (jjtc002) {
                                                                                             jjtree.clearNodeScope(jjtn002);
                                                                                             jjtc002 = false;
                                                                                           } else {
                                                                                             jjtree.popNode();
                                                                                           }
                                                                                           if (jjte002 instanceof RuntimeException) {
                                                                                             throw (RuntimeException)jjte002;
                                                                                           }
                                                                                           if (jjte002 instanceof ParseException) {
                                                                                             throw (ParseException)jjte002;
                                                                                           }
                                                                                           throw (Error)jjte002;
                                                                                         } finally {
                                                                                           if (jjtc002) {
                                                                                             jjtree.closeNodeScope(jjtn002,  2);
                                                                                           }
                                                                                         }
/*@egen*/           )* }

void Factor(): {}               { (Id() | NoIdFactor()) NextFactors()}
void FactorNoId(): {}           { NoIdFactor() NextFactors() }

void NoIdFactor(): {}
{
    Integer()
    |/*@bgen(jjtree) TRUE */
      {
        SimpleNode jjtn001 = new SimpleNode(JJTTRUE);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*/ <TRUE>/*@bgen(jjtree)*/
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001, true);
        }
      }
/*@egen*/      
    |/*@bgen(jjtree) FALSE */
      {
        SimpleNode jjtn002 = new SimpleNode(JJTFALSE);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
      }
      try {
/*@egen*/ <FALSE>/*@bgen(jjtree)*/
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002, true);
        }
      }
/*@egen*/       
    |/*@bgen(jjtree) THIS */
      {
        SimpleNode jjtn003 = new SimpleNode(JJTTHIS);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
      }
      try {
/*@egen*/ <THIS>/*@bgen(jjtree)*/
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003, true);
        }
      }
/*@egen*/      
    | <NEW> (<INT> <OPEN_BRACK>/*@bgen(jjtree) NEWARRAY */
                                {
                                  SimpleNode jjtn004 = new SimpleNode(JJTNEWARRAY);
                                  boolean jjtc004 = true;
                                  jjtree.openNodeScope(jjtn004);
                                }
                                try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                                } catch (Throwable jjte004) {
                                  if (jjtc004) {
                                    jjtree.clearNodeScope(jjtn004);
                                    jjtc004 = false;
                                  } else {
                                    jjtree.popNode();
                                  }
                                  if (jjte004 instanceof RuntimeException) {
                                    throw (RuntimeException)jjte004;
                                  }
                                  if (jjte004 instanceof ParseException) {
                                    throw (ParseException)jjte004;
                                  }
                                  throw (Error)jjte004;
                                } finally {
                                  if (jjtc004) {
                                    jjtree.closeNodeScope(jjtn004, true);
                                  }
                                }
/*@egen*/           <CLOSE_BRACK> |/*@bgen(jjtree) NEWOBJ */
                                                                           {
                                                                             SimpleNode jjtn005 = new SimpleNode(JJTNEWOBJ);
                                                                             boolean jjtc005 = true;
                                                                             jjtree.openNodeScope(jjtn005);
                                                                           }
                                                                           try {
/*@egen*/ Id()/*@bgen(jjtree)*/
                                                                           } catch (Throwable jjte005) {
                                                                             if (jjtc005) {
                                                                               jjtree.clearNodeScope(jjtn005);
                                                                               jjtc005 = false;
                                                                             } else {
                                                                               jjtree.popNode();
                                                                             }
                                                                             if (jjte005 instanceof RuntimeException) {
                                                                               throw (RuntimeException)jjte005;
                                                                             }
                                                                             if (jjte005 instanceof ParseException) {
                                                                               throw (ParseException)jjte005;
                                                                             }
                                                                             throw (Error)jjte005;
                                                                           } finally {
                                                                             if (jjtc005) {
                                                                               jjtree.closeNodeScope(jjtn005, true);
                                                                             }
                                                                           }
/*@egen*/         <OPEN_PAREN> <CLOSE_PAREN>)
    | <NOT>/*@bgen(jjtree) NOT */
            {
              SimpleNode jjtn006 = new SimpleNode(JJTNOT);
              boolean jjtc006 = true;
              jjtree.openNodeScope(jjtn006);
            }
            try {
/*@egen*/ Factor()/*@bgen(jjtree)*/
            } catch (Throwable jjte006) {
              if (jjtc006) {
                jjtree.clearNodeScope(jjtn006);
                jjtc006 = false;
              } else {
                jjtree.popNode();
              }
              if (jjte006 instanceof RuntimeException) {
                throw (RuntimeException)jjte006;
              }
              if (jjte006 instanceof ParseException) {
                throw (ParseException)jjte006;
              }
              throw (Error)jjte006;
            } finally {
              if (jjtc006) {
                jjtree.closeNodeScope(jjtn006, true);
              }
            }
/*@egen*/     
    | <OPEN_PAREN> FullExpression() <CLOSE_PAREN>
}

void NextFactors(): {}
{
    NextFactor() NextFactors() | {}
}

void NextFactor(): {}
{
    NoBrackNextFactor()
    | <OPEN_BRACK>/*@bgen(jjtree) #INDEX( 2) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(JJTINDEX);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*/ FullExpression()/*@bgen(jjtree)*/
                   } catch (Throwable jjte001) {
                     if (jjtc001) {
                       jjtree.clearNodeScope(jjtn001);
                       jjtc001 = false;
                     } else {
                       jjtree.popNode();
                     }
                     if (jjte001 instanceof RuntimeException) {
                       throw (RuntimeException)jjte001;
                     }
                     if (jjte001 instanceof ParseException) {
                       throw (ParseException)jjte001;
                     }
                     throw (Error)jjte001;
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  2);
                     }
                   }
/*@egen*/           <CLOSE_BRACK>
}

void NoBrackNextFactor(): {}
{
    <DOT> (/*@bgen(jjtree) #LENGTH( 1) */
           {
             SimpleNode jjtn001 = new SimpleNode(JJTLENGTH);
             boolean jjtc001 = true;
             jjtree.openNodeScope(jjtn001);
           }
           try {
/*@egen*/<LENGTH>/*@bgen(jjtree)*/
           } finally {
             if (jjtc001) {
               jjtree.closeNodeScope(jjtn001,  1);
             }
           }
/*@egen*/            | Id() <OPEN_PAREN> FunctionCallParams()/*@bgen(jjtree) #FCALL( 3) */
                                                                        {
                                                                          SimpleNode jjtn002 = new SimpleNode(JJTFCALL);
                                                                          boolean jjtc002 = true;
                                                                          jjtree.openNodeScope(jjtn002);
                                                                        }
                                                                        try {
/*@egen*/ <CLOSE_PAREN>/*@bgen(jjtree)*/
                                                                        } finally {
                                                                          if (jjtc002) {
                                                                            jjtree.closeNodeScope(jjtn002,  3);
                                                                          }
                                                                        }
/*@egen*/          )
}

void FunctionCallParams()            : {/*@bgen(jjtree) PARAMETERS */
  SimpleNode jjtn000 = new SimpleNode(JJTPARAMETERS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PARAMETERS */
    try {
/*@egen*/
    [FullExpression() (<COMMA> FullExpression())*]/*@bgen(jjtree)*/
    } catch (Throwable jjte000) {
      if (jjtc000) {
        jjtree.clearNodeScope(jjtn000);
        jjtc000 = false;
      } else {
        jjtree.popNode();
      }
      if (jjte000 instanceof RuntimeException) {
        throw (RuntimeException)jjte000;
      }
      if (jjte000 instanceof ParseException) {
        throw (ParseException)jjte000;
      }
      throw (Error)jjte000;
    } finally {
      if (jjtc000) {
        jjtree.closeNodeScope(jjtn000, true);
      }
    }
/*@egen*/
}

JAVACODE
void error_skip() {
    Token t = getToken(1);

    while(t.kind != CLOSE_PAREN && t.kind != OPEN_BRACES && t.kind != IF && t.kind != WHILE && t.kind != SEMI_COLON) {        
        t = getNextToken();    
    }

    if(t.kind == CLOSE_PAREN || t.kind == SEMI_COLON) {
        getNextToken(); 
        System.out.println("T-> " + t.kind);
    }        
}